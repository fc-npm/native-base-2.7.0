{"version":3,"sources":["../../../src/basic/Header.js"],"names":["Header","props","state","orientation","val","maxComp","Math","max","variable","deviceWidth","deviceHeight","width","setState","mode","inSet","inset","undefined","Inset","InsetValues","portrait","landscape","oldHeight","style","height","topInset","topPadder","StyleSheet","flatten","padding","paddingTop","_root","c","Component","contextTypes","theme","PropTypes","object","propTypes","ViewPropTypes","oneOfType","number","array","searchBar","bool","rounded","StyledHeader","mapPropsToStyleNames"],"mappings":"u1BAAA,4B,2CACA,qC,mDACA,yCACA,iEACA,mE,yEACA,qD,iDACA,8B,i7BACMA,O,mDAIJ,gBAAYC,KAAZ,CAAmB,oIACXA,KADW,GAEjB,MAAKC,KAAL,CAAa,CACXC,YAAa,UADF,CAAb,CAFiB,aAKlB,C,qEACYC,G,CAAK,CAChB,GAAIC,SAAUC,KAAKC,GAAL,CAASC,mBAASC,WAAlB,CAA+BD,mBAASE,YAAxC,CAAd,CACA,GAAIN,IAAIO,KAAJ,EAAaN,OAAjB,CAA0B,KAAKO,QAAL,CAAc,CAAET,YAAa,WAAf,CAAd,EAA1B,IACK,CACH,KAAKS,QAAL,CAAc,CAAET,YAAa,UAAf,CAAd,EACD,CACF,C,wDACeU,I,CAAMC,K,CAAO,CAC3B,GAAIC,OAAQ,IAAZ,CACA,GAAID,OAASE,SAAb,CAAwB,CACtBD,MAAQD,KAAR,CACD,CAFD,IAEO,CACLC,MAAQP,mBAASS,KAAjB,CACD,CACD,GAAMC,aAAcL,OAAS,UAAT,CAAsBE,MAAMI,QAA5B,CAAuCJ,MAAMK,SAAjE,CACA,GAAIC,WAAY,IAAhB,CACA,GAAI,KAAKpB,KAAL,CAAWqB,KAAX,CAAiBC,MAAjB,EAA2BP,SAA/B,CAA0C,CACxCK,UAAY,KAAKpB,KAAL,CAAWqB,KAAX,CAAiBC,MAA7B,CACD,CAFD,IAEO,IAAI,KAAKtB,KAAL,CAAWqB,KAAX,CAAiB,CAAjB,EAAoBC,MAAxB,CAAgC,CACrCF,UAAY,KAAKpB,KAAL,CAAWqB,KAAX,CAAiB,CAAjB,EAAoBC,MAAhC,CACD,CAFM,IAEA,CACLF,UAAY,KAAKpB,KAAL,CAAWqB,KAAX,CAAiB,CAAjB,EAAoBC,MAAhC,CACD,CACD,GAAIA,QAASF,UAAYH,YAAYM,QAArC,CACA,MAAOD,OAAP,CACD,C,wDACeV,I,CAAMC,K,CAAO,CAC3B,GAAIC,OAAQ,IAAZ,CACA,GAAID,OAASE,SAAb,CAAwB,CACtBD,MAAQD,KAAR,CACD,CAFD,IAEO,CACLC,MAAQP,mBAASS,KAAjB,CACD,CACD,GAAMC,aAAcL,OAAS,UAAT,CAAsBE,MAAMI,QAA5B,CAAuCJ,MAAMK,SAAjE,CACA,GAAIK,WAAY,IAAhB,CACA,GAAIH,OAAQI,wBAAWC,OAAX,CAAmB,KAAK1B,KAAL,CAAWqB,KAA9B,CAAZ,CACA,GAAIA,MAAMM,OAAN,GAAkBZ,SAAlB,EAA+BM,MAAMO,UAAN,GAAqBb,SAAxD,CAAmE,CACjES,UAAY,CAACH,MAAMO,UAAN,CAAmBP,MAAMO,UAAzB,CAAsCP,MAAMM,OAA7C,EAAwDV,YAAYM,QAAhF,CACD,CAFD,IAEO,CACLC,UAAYP,YAAYM,QAAxB,CACD,CACD,MAAOC,UAAP,CACD,C,uCACQ,iBACP,MACE,+BAAC,iBAAD,WAAM,IAAK,sBAAM,QAAKK,KAAL,CAAaC,CAAnB,EAAX,EAAsC,KAAK9B,KAA3C,mDADF,CAGD,C,oBAzDkB+B,gB,EAAfhC,M,CACGiC,Y,CAAe,CACpBC,MAAOC,oBAAUC,MADG,C,CA2DxBpC,OAAOqC,SAAP,aACKC,0BADL,EAEEhB,MAAOa,oBAAUI,SAAV,CAAoB,CACzBJ,oBAAUC,MADe,CAEzBD,oBAAUK,MAFe,CAGzBL,oBAAUM,KAHe,CAApB,CAFT,CAOEC,UAAWP,oBAAUQ,IAPvB,CAQEC,QAAST,oBAAUQ,IARrB,GAWA,GAAME,cAAe,yCACnB,mBADmB,CAEnB,EAFmB,CAGnBC,8BAHmB,EAInB9C,MAJmB,CAArB,C,QAKyBA,M,CAAhB6C,Y","file":"Header.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { View, StatusBar, ViewPropTypes, StyleSheet } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\nimport variable from \"../theme/variables/platform\";\nimport _ from \"lodash\";\nclass Header extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      orientation: \"portrait\"\n    };\n  }\n  layoutChange(val) {\n    let maxComp = Math.max(variable.deviceWidth, variable.deviceHeight);\n    if (val.width >= maxComp) this.setState({ orientation: \"landscape\" });\n    else {\n      this.setState({ orientation: \"portrait\" });\n    }\n  }\n  calculateHeight(mode, inSet) {\n    let inset = null;\n    if (inSet != undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n    let oldHeight = null;\n    if (this.props.style.height != undefined) {\n      oldHeight = this.props.style.height;\n    } else if (this.props.style[1].height) {\n      oldHeight = this.props.style[1].height;\n    } else {\n      oldHeight = this.props.style[0].height;\n    }\n    let height = oldHeight + InsetValues.topInset;\n    return height;\n  }\n  calculatePadder(mode, inSet) {\n    let inset = null;\n    if (inSet != undefined) {\n      inset = inSet;\n    } else {\n      inset = variable.Inset;\n    }\n    const InsetValues = mode === \"portrait\" ? inset.portrait : inset.landscape;\n    let topPadder = null;\n    let style = StyleSheet.flatten(this.props.style);\n    if (style.padding !== undefined && style.paddingTop !== undefined) {\n      topPadder = (style.paddingTop ? style.paddingTop : style.padding) + InsetValues.topInset;\n    } else {\n      topPadder = InsetValues.topInset;\n    }\n    return topPadder;\n  }\n  render() {\n    return (\n      <View ref={c => (this._root = c)} {...this.props} />\n    );\n  }\n}\n\nHeader.propTypes = {\n  ...ViewPropTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  searchBar: PropTypes.bool,\n  rounded: PropTypes.bool\n};\n\nconst StyledHeader = connectStyle(\n  \"NativeBase.Header\",\n  {},\n  mapPropsToStyleNames\n)(Header);\nexport { StyledHeader as Header };"]}